module.exports.courseGETData = [
  ['/api/v1/courses?include=student', 500, 'Something went wrong!'],
  ['/api/v1/courses', 200],
  ['/api/v1/courses/?', 200],
  ['/api/v1/courses?', 200],
  ['/api/v1/courses/1', 200],
  ['/api/v1/courses?page=10', 200],
  ['/api/v1/courses?size=10', 200],
  ['/api/v1/courses?page=10&size=2', 200],
  ['/api/v1/courses?include=professor', 200],
  ['/api/v1/courses?include=major', 200],
  ['/api/v1/courses?include=professor&include=major', 200],
  ['/api/v1/courses?include=professor&include=major&page=5', 200],
  ['/api/v1/courses?include=professor&include=major&size=5', 200],
  ['/api/v1/courses?include=professor&include=major&page=5&size=5', 200],
  ['/api/v1/courses?include=professor&include=major&size=5&page=5', 200],
  ['/api/v1/courses/1/enrollments', 200],
  ['/api/v1/courses/1/enrollments?page=1&size=4', 200],
  ['/api/v1/courses/1/enrollments?page=2', 200],
  ['/api/v1/courses/1/enrollments?size=2', 200],
  ['/api/v1/courses/1/professors', 200],
  ['/api/v1/courses/1/professors?page=1&size=4', 200],
  ['/api/v1/courses/1/professors?page=2', 200],
  ['/api/v1/courses/1/professors?size=2', 200],
  ['/api/v1/courses/1/exams', 200],
  ['/api/v1/courses/1/exams?page=1&size=4', 200],
  ['/api/v1/courses/1/exams?page=2', 200],
  ['/api/v1/courses/1/exams?size=2', 200],
  ['/api/v1/courses/aaa/enrollments', 400, ':id must be an integer'],
  ['/api/v1/courses/aaa/professors', 400, ':id must be an integer'],
  ['/api/v1/courses/aaa/exams', 400, ':id must be an integer'],
  ['/api/v1/courses/aaaa', 400, ':id must be an integer'],
  ['/api/v1/courses/+', 400, ':id must be an integer'],
  ['/api/v1/courses?include=&size=5&page=5', 400, 'Include query cannot be empty'],
  ['/api/v1/courses?include=1', 400, '?include= cannot be an integer'],
  ['/api/v1/courses?page=', 400, 'Value after page= must be a positive integer', 'page= query cannot be empty'],
  ['/api/v1/courses?page=-2', 400, 'Value after page= must be a positive integer'],
  ['/api/v1/courses/1/enrollments?page=-2', 400, 'Value after page= must be a positive integer'],
  ['/api/v1/courses/1/professors?page=-2', 400, 'Value after page= must be a positive integer'],
  ['/api/v1/courses/1/exams?page=-2', 400, 'Value after page= must be a positive integer'],
  ['/api/v1/courses?size=0', 400, 'Value after size= must be an integer more than or equal to 1'],
  ['/api/v1/courses?size=', 400, 'Value after size= must be an integer more than or equal to 1', 'size= query cannot be empty'],
  ['/api/v1/courses?page=&size=', 400, 'Value after page= must be a positive integer', 'page= query cannot be empty',
    'Value after size= must be an integer more than or equal to 1', 'size= query cannot be empty'],
  ['/api/v1/courses/2/enrollments?page=&size=', 400, 'Value after page= must be a positive integer', 'page= query cannot be empty',
    'Value after size= must be an integer more than or equal to 1', 'size= query cannot be empty'],
  ['/api/v1/courses/2/professors?page=&size=', 400, 'Value after page= must be a positive integer', 'page= query cannot be empty',
    'Value after size= must be an integer more than or equal to 1', 'size= query cannot be empty'],
  ['/api/v1/courses/2/exams?page=&size=', 400, 'Value after page= must be a positive integer', 'page= query cannot be empty',
    'Value after size= must be an integer more than or equal to 1', 'size= query cannot be empty'],
  ['/api/v1/courses?page=10&size=', 400, 'Value after size= must be an integer more than or equal to 1', 'size= query cannot be empty'],
  ['/api/v1/courses?page=&size=2', 400, 'Value after page= must be a positive integer', 'page= query cannot be empty'],
  ['/api/v1/course', 404, 'Requested URL /api/v1/course not found'],
  ['/api/v1/courses/aaa/aaa', 404, 'Requested URL /api/v1/courses/aaa/aaa not found'],
  ['/api/v1/courses/73', 404, 'No data found for ID 73'],
  ['/api/v1/courses/73/enrollments', 404, 'No data found for ID 73'],
  ['/api/v1/courses/73/professors', 404, 'No data found for ID 73'],
  ['/api/v1/courses/73/exams', 404, 'No data found for ID 73']
];

module.exports.coursePOSTData = [
  ['/api/v1/courses', { name: 'New course test', credit_hours: 7, professor_id: 2, major_id: 2 }, 201],
  ['/api/v1/courses', { id: 5, credit_hours: 7, professor_id: 2, major_id: 2, created_at: '2022-01-31 12:00', updated_at: '2022-01-31 12:00' }, 400, 'Cannot set property of \'id\'',
    'Cannot set property of \'created_at\'', 'Cannot set property of \'updated_at\'', 'Field \'name\' must be provided', 'Field \'name\' must be a string',
    'Field \'name\' cannot be an empty string'],
  ['/api/v1/courses', { id: 5, name: 'New course 2', credit_hours: 7, professor_id: 2, major_id: 2, created_at: '2022-01-31 12:00', updated_at: '2022-01-31 12:00' }, 400, 'Cannot set property of \'id\'',
    'Cannot set property of \'created_at\'', 'Cannot set property of \'updated_at\''],
  ['/api/v1/courses', { name: 'New course 2', professor_id: 2, major_id: 2 }, 400, 'Field \'credit_hours\' must be provided', 'Field \'credit_hours\' must be an integer greater than or equal to 1',
    'Field \'credit_hours\' cannot be an empty'],
  ['/api/v1/courses', { name: 'New course 2', credit_hours: 7, professor_id: 2 }, 400, 'Field \'major_id\' must be provided',
    'Field \'major_id\' must be an integer', 'Field \'major_id\' cannot be empty'],
  ['/api/v1/courses', { name: 'New course 2', credit_hours: 7, major_id: 2 }, 400, 'Field \'professor_id\' must be provided', 'Field \'professor_id\' must be an integer',
    'Field \'professor_id\' cannot be empty'],
  ['/api/v1/courses', { na: 'New course test', credit_hours: 7, professor_id: 2, maj: 2 }, 400, 'Field \'name\' must be provided', 'Field \'name\' must be a string', 'Field \'name\' cannot be an empty string',
    'Field \'major_id\' must be provided', 'Field \'major_id\' must be an integer', 'Field \'major_id\' cannot be empty'],
  ['/api/v1/courses', { name: 'New course test', credit_hours: 7, professor_id: 2, major_id: 2 }, 500, 'Something went wrong!']
];

module.exports.coursePUTData = [
  ['/api/v1/courses/1', { name: 'New course put test', credit_hours: 7, professor_id: 2, major_id: 2 }, 202],
  ['/api/v1/courses/n', { name: 'New put course test', credit_hours: 6, professor_id: 1, major_id: 3 }, 400, ':id must be an integer'],
  ['/api/v1/courses/73', { name: 'New course put test 2', credit_hours: 6, professor_id: 1, major_id: 1 }, 404, 'No data found for ID 73'],
  ['/api/v1/courses/2', { id: 5, name: 'New course put test', credit_hours: 7, professor_id: 2, major_id: 2, created_at: '2022-01-31 12:00', updated_at: '2022-01-31 12:00' }, 400, 'Cannot set property of \'id\'',
    'Cannot set property of \'created_at\'', 'Cannot set property of \'updated_at\''],
  ['/api/v1/courses/3', { id: 6, name: 'New course course', credit_hours: 7, professor_id: 2, major_id: 2 }, 400, 'Cannot set property of \'id\''],
  ['/api/v1/courses/1', { name: '', credit_hours: 7, professor_id: 2, major_id: 2 }, 400, 'Field \'name\' cannot be an empty string'],
  ['/api/v1/courses/3', { na: 'New course test', credit_hours: 7, professor_id: 2, major_id: 2 }, 400, 'Field \'name\' must be provided', 'Field \'name\' must be a string', 'Field \'name\' cannot be an empty string'],
  ['/api/v1/courses/2', { name: 'New course put 2', credit_hours: '', professor_id: 2, major_id: 2 }, 400, 'Field \'credit_hours\' must be an integer greater than or equal to 1',
    'Field \'credit_hours\' cannot be an empty'],
  ['/api/v1/courses/2', { name: 'New course 2', credit_hours: 7, professor_id: 2, major_id: 'aa' }, 400, 'Field \'major_id\' must be an integer'],
  ['/api/v1/courses/1', { name: 'New course 2', credit_hours: 7, major_id: 2 }, 400, 'Field \'professor_id\' must be provided', 'Field \'professor_id\' must be an integer',
    'Field \'professor_id\' cannot be empty'],
  ['/api/v1/courses/3', { na: 'New course test', credit_hours: 7, professor_id: 2, maj: 2 }, 400, 'Field \'name\' must be provided', 'Field \'name\' must be a string', 'Field \'name\' cannot be an empty string',
    'Field \'major_id\' must be provided', 'Field \'major_id\' must be an integer', 'Field \'major_id\' cannot be empty']
];

module.exports.courseDELETEData = [
  ['/api/v1/courses/2', 204, '"id": 2'],
  ['/api/v1/courses/73', 404, 'No data found for ID 73'],
  ['/api/v1/courses/n', 400, ':id must be an integer']
];
